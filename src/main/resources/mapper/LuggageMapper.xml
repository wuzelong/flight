<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jmu.dao.LuggageMapper">
  <resultMap id="BaseResultMap" type="cn.jmu.bean.Luggage">
    <id column="luggageId" jdbcType="INTEGER" property="luggageid" />
    <result column="ticketId" jdbcType="INTEGER" property="ticketid" />
    <result column="luggageWeight" jdbcType="NUMERIC" property="luggageweight" />
    <result column="length" jdbcType="NUMERIC" property="length" />
    <result column="width" jdbcType="NUMERIC" property="width" />
    <result column="height" jdbcType="NUMERIC" property="height" />
    <result column="fine" jdbcType="NUMERIC" property="fine" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    luggageId, ticketId, luggageWeight, length, width, height, fine
  </sql>
  <select id="selectByExample" parameterType="cn.jmu.bean.LuggageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from luggage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from luggage
    where luggageId = #{luggageid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from luggage
    where luggageId = #{luggageid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jmu.bean.LuggageExample">
    delete from luggage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jmu.bean.Luggage">
    insert into luggage (luggageId, ticketId, luggageWeight, 
      length, width, height, 
      fine)
    values (#{luggageid,jdbcType=INTEGER}, #{ticketid,jdbcType=INTEGER}, #{luggageweight,jdbcType=NUMERIC}, 
      #{length,jdbcType=NUMERIC}, #{width,jdbcType=NUMERIC}, #{height,jdbcType=NUMERIC}, 
      #{fine,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="cn.jmu.bean.Luggage">
    insert into luggage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="luggageid != null">
        luggageId,
      </if>
      <if test="ticketid != null">
        ticketId,
      </if>
      <if test="luggageweight != null">
        luggageWeight,
      </if>
      <if test="length != null">
        length,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="fine != null">
        fine,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="luggageid != null">
        #{luggageid,jdbcType=INTEGER},
      </if>
      <if test="ticketid != null">
        #{ticketid,jdbcType=INTEGER},
      </if>
      <if test="luggageweight != null">
        #{luggageweight,jdbcType=NUMERIC},
      </if>
      <if test="length != null">
        #{length,jdbcType=NUMERIC},
      </if>
      <if test="width != null">
        #{width,jdbcType=NUMERIC},
      </if>
      <if test="height != null">
        #{height,jdbcType=NUMERIC},
      </if>
      <if test="fine != null">
        #{fine,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jmu.bean.LuggageExample" resultType="java.lang.Long">
    select count(*) from luggage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update luggage
    <set>
      <if test="record.luggageid != null">
        luggageId = #{record.luggageid,jdbcType=INTEGER},
      </if>
      <if test="record.ticketid != null">
        ticketId = #{record.ticketid,jdbcType=INTEGER},
      </if>
      <if test="record.luggageweight != null">
        luggageWeight = #{record.luggageweight,jdbcType=NUMERIC},
      </if>
      <if test="record.length != null">
        length = #{record.length,jdbcType=NUMERIC},
      </if>
      <if test="record.width != null">
        width = #{record.width,jdbcType=NUMERIC},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=NUMERIC},
      </if>
      <if test="record.fine != null">
        fine = #{record.fine,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update luggage
    set luggageId = #{record.luggageid,jdbcType=INTEGER},
      ticketId = #{record.ticketid,jdbcType=INTEGER},
      luggageWeight = #{record.luggageweight,jdbcType=NUMERIC},
      length = #{record.length,jdbcType=NUMERIC},
      width = #{record.width,jdbcType=NUMERIC},
      height = #{record.height,jdbcType=NUMERIC},
      fine = #{record.fine,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jmu.bean.Luggage">
    update luggage
    <set>
      <if test="ticketid != null">
        ticketId = #{ticketid,jdbcType=INTEGER},
      </if>
      <if test="luggageweight != null">
        luggageWeight = #{luggageweight,jdbcType=NUMERIC},
      </if>
      <if test="length != null">
        length = #{length,jdbcType=NUMERIC},
      </if>
      <if test="width != null">
        width = #{width,jdbcType=NUMERIC},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=NUMERIC},
      </if>
      <if test="fine != null">
        fine = #{fine,jdbcType=NUMERIC},
      </if>
    </set>
    where luggageId = #{luggageid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jmu.bean.Luggage">
    update luggage
    set ticketId = #{ticketid,jdbcType=INTEGER},
      luggageWeight = #{luggageweight,jdbcType=NUMERIC},
      length = #{length,jdbcType=NUMERIC},
      width = #{width,jdbcType=NUMERIC},
      height = #{height,jdbcType=NUMERIC},
      fine = #{fine,jdbcType=NUMERIC}
    where luggageId = #{luggageid,jdbcType=INTEGER}
  </update>
</mapper>