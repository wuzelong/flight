<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jmu.dao.TicketTypeMapper">
  <resultMap id="BaseResultMap" type="cn.jmu.bean.TicketType">
    <id column="cabinId" jdbcType="INTEGER" property="cabinid" />
    <id column="executiveFlightId" jdbcType="CHAR" property="executiveflightid" />
    <result column="sellingPrice" jdbcType="NUMERIC" property="sellingprice" />
    <result column="effectiveStartTime" jdbcType="TIMESTAMP" property="effectivestarttime" />
    <result column="effectiveEndTime" jdbcType="TIMESTAMP" property="effectiveendtime" />
    <result column="discount" jdbcType="NUMERIC" property="discount" />
    <result column="remainingTickets" jdbcType="INTEGER" property="remainingtickets" />
    <result column="luggageAllowance" jdbcType="INTEGER" property="luggageallowance" />
    <result column="luggageNumber" jdbcType="INTEGER" property="luggagenumber" />
    <result column="mealStatus" jdbcType="CHAR" property="mealstatus" />
    <result column="rules" jdbcType="VARCHAR" property="rules" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cabinId, executiveFlightId, sellingPrice, effectiveStartTime, effectiveEndTime, discount, 
    remainingTickets, luggageAllowance, luggageNumber, mealStatus, rules
  </sql>
  <select id="selectByExample" parameterType="cn.jmu.bean.TicketTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticketType
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.jmu.bean.TicketTypeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticketType
    where cabinId = #{cabinid,jdbcType=INTEGER}
      and executiveFlightId = #{executiveflightid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.jmu.bean.TicketTypeKey">
    delete from ticketType
    where cabinId = #{cabinid,jdbcType=INTEGER}
      and executiveFlightId = #{executiveflightid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jmu.bean.TicketTypeExample">
    delete from ticketType
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jmu.bean.TicketType">
    insert into ticketType (cabinId, executiveFlightId, sellingPrice, 
      effectiveStartTime, effectiveEndTime, 
      discount, remainingTickets, luggageAllowance, 
      luggageNumber, mealStatus, rules
      )
    values (#{cabinid,jdbcType=INTEGER}, #{executiveflightid,jdbcType=CHAR}, #{sellingprice,jdbcType=NUMERIC}, 
      #{effectivestarttime,jdbcType=TIMESTAMP}, #{effectiveendtime,jdbcType=TIMESTAMP}, 
      #{discount,jdbcType=NUMERIC}, #{remainingtickets,jdbcType=INTEGER}, #{luggageallowance,jdbcType=INTEGER}, 
      #{luggagenumber,jdbcType=INTEGER}, #{mealstatus,jdbcType=CHAR}, #{rules,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.jmu.bean.TicketType">
    insert into ticketType
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cabinid != null">
        cabinId,
      </if>
      <if test="executiveflightid != null">
        executiveFlightId,
      </if>
      <if test="sellingprice != null">
        sellingPrice,
      </if>
      <if test="effectivestarttime != null">
        effectiveStartTime,
      </if>
      <if test="effectiveendtime != null">
        effectiveEndTime,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="remainingtickets != null">
        remainingTickets,
      </if>
      <if test="luggageallowance != null">
        luggageAllowance,
      </if>
      <if test="luggagenumber != null">
        luggageNumber,
      </if>
      <if test="mealstatus != null">
        mealStatus,
      </if>
      <if test="rules != null">
        rules,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cabinid != null">
        #{cabinid,jdbcType=INTEGER},
      </if>
      <if test="executiveflightid != null">
        #{executiveflightid,jdbcType=CHAR},
      </if>
      <if test="sellingprice != null">
        #{sellingprice,jdbcType=NUMERIC},
      </if>
      <if test="effectivestarttime != null">
        #{effectivestarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveendtime != null">
        #{effectiveendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=NUMERIC},
      </if>
      <if test="remainingtickets != null">
        #{remainingtickets,jdbcType=INTEGER},
      </if>
      <if test="luggageallowance != null">
        #{luggageallowance,jdbcType=INTEGER},
      </if>
      <if test="luggagenumber != null">
        #{luggagenumber,jdbcType=INTEGER},
      </if>
      <if test="mealstatus != null">
        #{mealstatus,jdbcType=CHAR},
      </if>
      <if test="rules != null">
        #{rules,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jmu.bean.TicketTypeExample" resultType="java.lang.Long">
    select count(*) from ticketType
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticketType
    <set>
      <if test="record.cabinid != null">
        cabinId = #{record.cabinid,jdbcType=INTEGER},
      </if>
      <if test="record.executiveflightid != null">
        executiveFlightId = #{record.executiveflightid,jdbcType=CHAR},
      </if>
      <if test="record.sellingprice != null">
        sellingPrice = #{record.sellingprice,jdbcType=NUMERIC},
      </if>
      <if test="record.effectivestarttime != null">
        effectiveStartTime = #{record.effectivestarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effectiveendtime != null">
        effectiveEndTime = #{record.effectiveendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=NUMERIC},
      </if>
      <if test="record.remainingtickets != null">
        remainingTickets = #{record.remainingtickets,jdbcType=INTEGER},
      </if>
      <if test="record.luggageallowance != null">
        luggageAllowance = #{record.luggageallowance,jdbcType=INTEGER},
      </if>
      <if test="record.luggagenumber != null">
        luggageNumber = #{record.luggagenumber,jdbcType=INTEGER},
      </if>
      <if test="record.mealstatus != null">
        mealStatus = #{record.mealstatus,jdbcType=CHAR},
      </if>
      <if test="record.rules != null">
        rules = #{record.rules,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticketType
    set cabinId = #{record.cabinid,jdbcType=INTEGER},
      executiveFlightId = #{record.executiveflightid,jdbcType=CHAR},
      sellingPrice = #{record.sellingprice,jdbcType=NUMERIC},
      effectiveStartTime = #{record.effectivestarttime,jdbcType=TIMESTAMP},
      effectiveEndTime = #{record.effectiveendtime,jdbcType=TIMESTAMP},
      discount = #{record.discount,jdbcType=NUMERIC},
      remainingTickets = #{record.remainingtickets,jdbcType=INTEGER},
      luggageAllowance = #{record.luggageallowance,jdbcType=INTEGER},
      luggageNumber = #{record.luggagenumber,jdbcType=INTEGER},
      mealStatus = #{record.mealstatus,jdbcType=CHAR},
      rules = #{record.rules,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jmu.bean.TicketType">
    update ticketType
    <set>
      <if test="sellingprice != null">
        sellingPrice = #{sellingprice,jdbcType=NUMERIC},
      </if>
      <if test="effectivestarttime != null">
        effectiveStartTime = #{effectivestarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveendtime != null">
        effectiveEndTime = #{effectiveendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=NUMERIC},
      </if>
      <if test="remainingtickets != null">
        remainingTickets = #{remainingtickets,jdbcType=INTEGER},
      </if>
      <if test="luggageallowance != null">
        luggageAllowance = #{luggageallowance,jdbcType=INTEGER},
      </if>
      <if test="luggagenumber != null">
        luggageNumber = #{luggagenumber,jdbcType=INTEGER},
      </if>
      <if test="mealstatus != null">
        mealStatus = #{mealstatus,jdbcType=CHAR},
      </if>
      <if test="rules != null">
        rules = #{rules,jdbcType=VARCHAR},
      </if>
    </set>
    where cabinId = #{cabinid,jdbcType=INTEGER}
      and executiveFlightId = #{executiveflightid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jmu.bean.TicketType">
    update ticketType
    set sellingPrice = #{sellingprice,jdbcType=NUMERIC},
      effectiveStartTime = #{effectivestarttime,jdbcType=TIMESTAMP},
      effectiveEndTime = #{effectiveendtime,jdbcType=TIMESTAMP},
      discount = #{discount,jdbcType=NUMERIC},
      remainingTickets = #{remainingtickets,jdbcType=INTEGER},
      luggageAllowance = #{luggageallowance,jdbcType=INTEGER},
      luggageNumber = #{luggagenumber,jdbcType=INTEGER},
      mealStatus = #{mealstatus,jdbcType=CHAR},
      rules = #{rules,jdbcType=VARCHAR}
    where cabinId = #{cabinid,jdbcType=INTEGER}
      and executiveFlightId = #{executiveflightid,jdbcType=CHAR}
  </update>
</mapper>