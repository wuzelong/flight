<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jmu.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="cn.jmu.bean.Orders">
    <id column="orderId" jdbcType="INTEGER" property="orderid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="offsetIntegral" jdbcType="INTEGER" property="offsetintegral" />
    <result column="totalCost" jdbcType="NUMERIC" property="totalcost" />
    <result column="orderStatusx" jdbcType="VARCHAR" property="orderstatusx" />
    <result column="telephone" jdbcType="CHAR" property="telephone" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="paidTime" jdbcType="TIMESTAMP" property="paidtime" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderId, userId, offsetIntegral, totalCost, orderStatusx, telephone, createTime, 
    paidTime, linkman
  </sql>
  <select id="selectByExample" parameterType="cn.jmu.bean.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jmu.bean.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jmu.bean.Orders">
    SET IDENTITY_INSERT orders ON
    insert into orders (orderId, userId, offsetIntegral,
      totalCost, orderStatusx, telephone, 
      createTime, paidTime, linkman
      )
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{offsetintegral,jdbcType=INTEGER}, 
      #{totalcost,jdbcType=NUMERIC}, #{orderstatusx,jdbcType=VARCHAR}, #{telephone,jdbcType=CHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{paidtime,jdbcType=TIMESTAMP}, #{linkman,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.jmu.bean.Orders">
    SET IDENTITY_INSERT orders ON
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="offsetintegral != null">
        offsetIntegral,
      </if>
      <if test="totalcost != null">
        totalCost,
      </if>
      <if test="orderstatusx != null">
        orderStatusx,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="paidtime != null">
        paidTime,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="offsetintegral != null">
        #{offsetintegral,jdbcType=INTEGER},
      </if>
      <if test="totalcost != null">
        #{totalcost,jdbcType=NUMERIC},
      </if>
      <if test="orderstatusx != null">
        #{orderstatusx,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidtime != null">
        #{paidtime,jdbcType=TIMESTAMP},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jmu.bean.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.offsetintegral != null">
        offsetIntegral = #{record.offsetintegral,jdbcType=INTEGER},
      </if>
      <if test="record.totalcost != null">
        totalCost = #{record.totalcost,jdbcType=NUMERIC},
      </if>
      <if test="record.orderstatusx != null">
        orderStatusx = #{record.orderstatusx,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=CHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paidtime != null">
        paidTime = #{record.paidtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set orderId = #{record.orderid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      offsetIntegral = #{record.offsetintegral,jdbcType=INTEGER},
      totalCost = #{record.totalcost,jdbcType=NUMERIC},
      orderStatusx = #{record.orderstatusx,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=CHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      paidTime = #{record.paidtime,jdbcType=TIMESTAMP},
      linkman = #{record.linkman,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jmu.bean.Orders">
    update orders
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="offsetintegral != null">
        offsetIntegral = #{offsetintegral,jdbcType=INTEGER},
      </if>
      <if test="totalcost != null">
        totalCost = #{totalcost,jdbcType=NUMERIC},
      </if>
      <if test="orderstatusx != null">
        orderStatusx = #{orderstatusx,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidtime != null">
        paidTime = #{paidtime,jdbcType=TIMESTAMP},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jmu.bean.Orders">
    update orders
    set userId = #{userid,jdbcType=INTEGER},
      offsetIntegral = #{offsetintegral,jdbcType=INTEGER},
      totalCost = #{totalcost,jdbcType=NUMERIC},
      orderStatusx = #{orderstatusx,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=CHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      paidTime = #{paidtime,jdbcType=TIMESTAMP},
      linkman = #{linkman,jdbcType=VARCHAR}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>