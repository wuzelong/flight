<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jmu.dao.TicketMapper">
  <resultMap id="BaseResultMap" type="cn.jmu.bean.Ticket">
    <id column="ticketId" jdbcType="INTEGER" property="ticketid" />
    <result column="orderId" jdbcType="INTEGER" property="orderid" />
    <result column="passengerId" jdbcType="CHAR" property="passengerid" />
    <result column="cabinId" jdbcType="INTEGER" property="cabinid" />
    <result column="tic_executiveFlightId" jdbcType="CHAR" property="ticExecutiveflightid" />
    <result column="airportConstructionCost" jdbcType="NUMERIC" property="airportconstructioncost" />
    <result column="insuranceCost" jdbcType="NUMERIC" property="insurancecost" />
    <result column="totalCost" jdbcType="NUMERIC" property="totalcost" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="checkStatus" jdbcType="VARCHAR" property="checkstatus" />
    <result column="boardingId" jdbcType="VARCHAR" property="boardingid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ticketId, orderId, passengerId, cabinId, tic_executiveFlightId, airportConstructionCost, 
    insuranceCost, totalCost, remarks, checkStatus, boardingId
  </sql>
  <select id="selectByExample" parameterType="cn.jmu.bean.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket
    where ticketId = #{ticketid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket
    where ticketId = #{ticketid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jmu.bean.TicketExample">
    delete from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jmu.bean.Ticket">
    insert into ticket (ticketId, orderId, passengerId, 
      cabinId, tic_executiveFlightId, airportConstructionCost, 
      insuranceCost, totalCost, remarks, 
      checkStatus, boardingId)
    values (#{ticketid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{passengerid,jdbcType=CHAR}, 
      #{cabinid,jdbcType=INTEGER}, #{ticExecutiveflightid,jdbcType=CHAR}, #{airportconstructioncost,jdbcType=NUMERIC}, 
      #{insurancecost,jdbcType=NUMERIC}, #{totalcost,jdbcType=NUMERIC}, #{remarks,jdbcType=VARCHAR}, 
      #{checkstatus,jdbcType=VARCHAR}, #{boardingid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jmu.bean.Ticket">
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ticketid != null">
        ticketId,
      </if>
      <if test="orderid != null">
        orderId,
      </if>
      <if test="passengerid != null">
        passengerId,
      </if>
      <if test="cabinid != null">
        cabinId,
      </if>
      <if test="ticExecutiveflightid != null">
        tic_executiveFlightId,
      </if>
      <if test="airportconstructioncost != null">
        airportConstructionCost,
      </if>
      <if test="insurancecost != null">
        insuranceCost,
      </if>
      <if test="totalcost != null">
        totalCost,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="checkstatus != null">
        checkStatus,
      </if>
      <if test="boardingid != null">
        boardingId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ticketid != null">
        #{ticketid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="passengerid != null">
        #{passengerid,jdbcType=CHAR},
      </if>
      <if test="cabinid != null">
        #{cabinid,jdbcType=INTEGER},
      </if>
      <if test="ticExecutiveflightid != null">
        #{ticExecutiveflightid,jdbcType=CHAR},
      </if>
      <if test="airportconstructioncost != null">
        #{airportconstructioncost,jdbcType=NUMERIC},
      </if>
      <if test="insurancecost != null">
        #{insurancecost,jdbcType=NUMERIC},
      </if>
      <if test="totalcost != null">
        #{totalcost,jdbcType=NUMERIC},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="checkstatus != null">
        #{checkstatus,jdbcType=VARCHAR},
      </if>
      <if test="boardingid != null">
        #{boardingid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jmu.bean.TicketExample" resultType="java.lang.Long">
    select count(*) from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticket
    <set>
      <if test="record.ticketid != null">
        ticketId = #{record.ticketid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.passengerid != null">
        passengerId = #{record.passengerid,jdbcType=CHAR},
      </if>
      <if test="record.cabinid != null">
        cabinId = #{record.cabinid,jdbcType=INTEGER},
      </if>
      <if test="record.ticExecutiveflightid != null">
        tic_executiveFlightId = #{record.ticExecutiveflightid,jdbcType=CHAR},
      </if>
      <if test="record.airportconstructioncost != null">
        airportConstructionCost = #{record.airportconstructioncost,jdbcType=NUMERIC},
      </if>
      <if test="record.insurancecost != null">
        insuranceCost = #{record.insurancecost,jdbcType=NUMERIC},
      </if>
      <if test="record.totalcost != null">
        totalCost = #{record.totalcost,jdbcType=NUMERIC},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.checkstatus != null">
        checkStatus = #{record.checkstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.boardingid != null">
        boardingId = #{record.boardingid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket
    set ticketId = #{record.ticketid,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=INTEGER},
      passengerId = #{record.passengerid,jdbcType=CHAR},
      cabinId = #{record.cabinid,jdbcType=INTEGER},
      tic_executiveFlightId = #{record.ticExecutiveflightid,jdbcType=CHAR},
      airportConstructionCost = #{record.airportconstructioncost,jdbcType=NUMERIC},
      insuranceCost = #{record.insurancecost,jdbcType=NUMERIC},
      totalCost = #{record.totalcost,jdbcType=NUMERIC},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      checkStatus = #{record.checkstatus,jdbcType=VARCHAR},
      boardingId = #{record.boardingid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jmu.bean.Ticket">
    update ticket
    <set>
      <if test="orderid != null">
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="passengerid != null">
        passengerId = #{passengerid,jdbcType=CHAR},
      </if>
      <if test="cabinid != null">
        cabinId = #{cabinid,jdbcType=INTEGER},
      </if>
      <if test="ticExecutiveflightid != null">
        tic_executiveFlightId = #{ticExecutiveflightid,jdbcType=CHAR},
      </if>
      <if test="airportconstructioncost != null">
        airportConstructionCost = #{airportconstructioncost,jdbcType=NUMERIC},
      </if>
      <if test="insurancecost != null">
        insuranceCost = #{insurancecost,jdbcType=NUMERIC},
      </if>
      <if test="totalcost != null">
        totalCost = #{totalcost,jdbcType=NUMERIC},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="checkstatus != null">
        checkStatus = #{checkstatus,jdbcType=VARCHAR},
      </if>
      <if test="boardingid != null">
        boardingId = #{boardingid,jdbcType=VARCHAR},
      </if>
    </set>
    where ticketId = #{ticketid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jmu.bean.Ticket">
    update ticket
    set orderId = #{orderid,jdbcType=INTEGER},
      passengerId = #{passengerid,jdbcType=CHAR},
      cabinId = #{cabinid,jdbcType=INTEGER},
      tic_executiveFlightId = #{ticExecutiveflightid,jdbcType=CHAR},
      airportConstructionCost = #{airportconstructioncost,jdbcType=NUMERIC},
      insuranceCost = #{insurancecost,jdbcType=NUMERIC},
      totalCost = #{totalcost,jdbcType=NUMERIC},
      remarks = #{remarks,jdbcType=VARCHAR},
      checkStatus = #{checkstatus,jdbcType=VARCHAR},
      boardingId = #{boardingid,jdbcType=VARCHAR}
    where ticketId = #{ticketid,jdbcType=INTEGER}
  </update>
<!--  <select id="insert2" parameterType="cn.jmu.bean.Ticket" statementType="CALLABLE" resultType="int">-->
<!--    {-->
<!--        call bookTicket (#{ticketid,mode=IN,jdbcType=INTEGER}, #{orderid,mode=IN,jdbcType=INTEGER}, #{passengerid,mode=IN,jdbcType=CHAR},-->
<!--      #{cabinid,mode=IN,jdbcType=INTEGER}, #{ticExecutiveflightid,mode=IN,jdbcType=CHAR}, #{airportconstructioncost,mode=IN,jdbcType=NUMERIC},-->
<!--      #{insurancecost,mode=IN,jdbcType=NUMERIC}, #{totalcost,mode=IN,jdbcType=NUMERIC}, #{remarks,mode=IN,jdbcType=VARCHAR},-->
<!--      #{checkstatus,mode=IN,jdbcType=VARCHAR}, #{boardingid,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=INTEGER})-->
<!--    }-->
<!--  </select>-->
  <select id="insert2" parameterType="cn.jmu.bean.Ticket" resultType="int">
        declare @Result int
        exec @Result=bookTicket #{ticketid}, #{orderid}, #{passengerid},
      #{cabinid}, #{ticExecutiveflightid}, #{airportconstructioncost},
      #{insurancecost}, #{totalcost}, #{remarks},
      #{checkstatus}, #{boardingid}
      select @Result
  </select>
</mapper>